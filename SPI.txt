目的：
	使用 泰芯 SPI 出图

现：
 泰芯是使用 IIC 出图



认识：
	SPI 四根线
	—— ( 
			Master-M 
			Out-O 
			Slave-S 
			In-I       )

	MOSI - 主设备 向   从设备发送数据的线
	MISO - 从设备 接受 主设备发送数据的线
	SCLK - 时钟线
	SS   - 设备选择线（选择指定的从设备）



泰芯命名地方：
#define PIN_SPI0_CS 
#define PIN_SPI0_CLK
#define PIN_SPI0_IO0
#define PIN_SPI0_IO1



	片选
在 SPI 通信中，CS（Chip Select，片选） 负责选择具体的从设备进行通信。
	当 CS 处于 低电平（0） 时，SPI 从设备会被激活；
	当 CS 处于 高电平（1） 时，SPI 从设备会被禁用。



	不同线模式
SPI_WIRE_SINGLE_MODE
单线模式，引脚使用CLK（时钟）、CS（片选）、IO0（数据）
每个时钟周期传输1 bit 数据，常见的SPI模式、全双工传输，速率较低(简单传感器低速设备)

SPI_WIRE_NORMAL_MODE
标准双线模式、引脚使用CLK、CS、IO0、IO1
每个时钟周期传输1 bit 数据，一般是IO0用于发送数据、IO1用于接受数据，标准全双工，中等速率(LCD屏幕、Flash存储等)

SPI_WIRE_DUAL_MODE
双线模式传输、引脚使用CLK、CS、IO0、IO1
每个时钟周期传输2 bit 数据）
半双工、IO0和IO1同时传输数据，不能同时发送和接受，适用高带宽的设备(图像传感器、NOR Flash等)

SPI_WIRE_QUAD_MODE
四线数据传输模式，引脚使用CLK、CS、IO0、IO1、IO2、IO3
每个时钟周期传输4 bit 数据，适用高速图像传感器，存储器等


	SPI 时钟模式
（CPOL -> Clock Polarity		: 表示空闲时为什么电平： 0就是低电平 1就是高电平）
（CPHA -> Clock Phase		: 表示第一个边沿采样还是第二个边沿采样)
SPI_CPOL_0_CPHA_0
SCk空闲为低电平、数据在SCK的第一个边沿(上升沿)被采样
SPI_CPOL_0_CPHA_1
SCk空闲为低电平、数据在SCK的第二个边沿(下降沿)被采样
SPI_CPOL_1_CPHA_0
SCk空闲为高电平、数据在SCK的第一个边沿(下降沿)被采样
SPI_CPOL_1_CPHA_1
SCk空闲为高电平、数据在SCK的第一个边沿(上升沿)被采样

PINGPANG
这是一种双缓冲区模式，在处理一个缓冲区的同时，可以填充另一个缓冲区
同理，SPI需要自己的缓冲区，所以需要给予空间

VSYNC（Vertical Sync）：垂直同步信号，用于指示一帧数据的开始
	：通常在摄像头、图像传感器等设备中、每次帧传输开始时会发送一个 VSYNC 信号
HSYNC（Horizontal Sync）:水平同步信号、用于指示一行数据的开始
	：每传输一行像素数据后，HSYNC会触发一次，表示一行的开始
一般就是设置超时时间(多久没有接受到数据就报异常)，前导信号次数和启动
之后就是设置，是否启动高速模式，pingpang模式和缓冲区大小


DMA是不经过CPU处理的，所以一般都会有这么这种设置，代表是否使用DMA，一般要求实时性的，但会和CPU抢占带宽
而且,DMA完成后，数据可能仍在缓存中，CPU读取可能是旧数据，所以需要清一下缓存的
以下不建议使用DMA：
1.数据量较小且传输频繁的 2.实时性要求极高，需要低延迟响应 3.系统内存和带宽有限的 4.启动慢，要求快速响应处理的，使用不了
好处是：低功耗、并行处理、大数据量传输，减轻CPU负担


	


